---
interface Props {
  title: string;
  image: string;
  href?: string;
}

const { title, image, href = "#" } = Astro.props;
---

<a
  class="category-card aspect-[11/16] relative w-[300px] overflow-hidden rounded-xl cursor-pointer border-3 border-secondary-orange duration-300 group select-none"
  href={href}
>
  <div class="absolute size-full -z-10">
    <div
      class="absolute size-full bg-gradient-to-t transition-colors duration-300 from-black/70 to-black/10 group-hover:from-black/90 group-hover:to-black/10 -z-10"
    >
    </div>
    <img
      class="absolute object-cover size-full group-hover:scale-110 transition-transform duration-300 -z-20"
      src={`/img/categories/${image}.webp`}
      alt="CategorÃ­a de Seguridad"
    />
  </div>
  <div class="flex flex-col size-full justify-end items-center z-10 p-4 gap-3">
    <slot />
    <p class="text-white uppercase font-semibold text-xl text-center">
      {title}
    </p>
  </div>
</a>

<script>
  import { gsap } from "gsap";
  import {
    scaleEnterAnimation,
    scaleLeaveAnimation,
  } from "@functions/animations";

  document.addEventListener("DOMContentLoaded", () => {
    const categoryCards = document.querySelectorAll(".category-card");

    categoryCards.forEach((card) => {
      card.addEventListener("mouseenter", () => {
        scaleEnterAnimation([card], 0.1);
        gsap.from(card.querySelector("svg"), {
          rotation: "60",
          scale: 0.8,
          stagger: 0.1,
          duration: 0.5,
          ease: "back",
        });
      });

      card.addEventListener("mouseleave", () => {
        scaleLeaveAnimation([card], 0.1);
        gsap.to(card.querySelector("svg"), {
          rotation: "0",
          duration: 0.5,
          ease: "back",
        });
      });
    });
  });
</script>
