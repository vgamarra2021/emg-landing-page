---
import SecondaryButton from "@components/buttons/SecondaryButton.astro";
import ProductCard from "@components/cards/ProductCard.astro";
import RightArrowIcon from "@assets/icons/right-arrow.svg";
import LeftCircleArrowIcon from "@assets/icons/left-circle-arrow.svg";
import RightCircleArrowIcon from "@assets/icons/right-circle-arrow.svg";
import "swiper/css";

interface Props {
  title?: string;
  mode?: string;
  image?: string;
}
const { title = "Nuestros Productos", mode = "dark", image = "products-section-bg" }: Props = Astro.props;
---

<section class="products-section custom-section relative overflow-hidden">
  <div class="absolute size-full -z-10 inset-0">
    <div
      class={`absolute size-full  ${mode === "dark" ? "bg-primary-blue/80" : "bg-light-blue/90"}`}
    >
    </div>
    <img
      class="object-cover size-full"
      src={`src/assets/img/${image}.webp`}
      alt="Productos"
    />
  </div>
  <div class="flex flex-col custom-container relative z-10 gap-8">
    <div class="products-section__title-container flex flex-row w-full justify-between items-center">
      <p
        class={`${mode === "dark" ? "text-white" : "text-primary-blue"} text-2xl font-semibold leading-12`}
      >
        {title}
      </p>
      <SecondaryButton
        title="MÃ¡s Productos"
        color={`${mode !== "dark" ? "primary-blue" : ""}`}
      >
        <RightArrowIcon
          stroke={`${mode === "dark" ? "#fff" : "var(--color-primary-blue)"}`}
        />
      </SecondaryButton>
    </div>
    <div id="products-carousel" class="swiper w-full">
      <div class="swiper-wrapper relative">
        <div class="swiper-slide">
          <ProductCard />
        </div>
        <div class="swiper-slide">
          <ProductCard />
        </div>
        <div class="swiper-slide">
          <ProductCard />
        </div>
        <div class="swiper-slide">
          <ProductCard />
        </div>
        <div class="swiper-slide">
          <ProductCard />
        </div>
        <div class="swiper-slide">
          <ProductCard />
        </div>
      </div>
    </div>
    <div
      class="arrow-left absolute -left-4 lg:-left-10 top-1/2 -translate-y-1/2 -translate-x-full cursor-pointer"
    >
      <LeftCircleArrowIcon
        height={40}
        width={40}
        fill={`${mode === "dark" ? "#fff" : "var(--color-primary-blue)"}`}
      />
    </div>
    <div
      class="arrow-right absolute -right-4 lg:-right-10 top-1/2 -translate-y-1/2 translate-x-full cursor-pointer"
    >
      <RightCircleArrowIcon
        height={40}
        width={40}
        fill={`${mode === "dark" ? "#fff" : "var(--color-primary-blue)"}`}
      />
    </div>
  </div>
</section>

<script>
  import Swiper from "swiper";
  import { Autoplay, Navigation } from "swiper/modules";

  const swiper = new Swiper("#products-carousel", {
    modules: [Autoplay, Navigation],
    autoplay: {
      delay: 3000,
      disableOnInteraction: false,
    },
    slidesPerView: 2,
    spaceBetween: 20,
    freeMode: true,
    loop: true,
    speed: 500,
    navigation: {
      nextEl: ".arrow-right",
      prevEl: ".arrow-left",
    },
    breakpoints: {
      320: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
      768: {
        slidesPerView: 2,
        spaceBetween: 20,
      },
      1024: {
        slidesPerView: 3,
        spaceBetween: 20,
      },
      1366: {
        slidesPerView: 4,
        spaceBetween: 30,
      },
      1920: {
        slidesPerView: 5,
        spaceBetween: 40,
      },
    },
  });
</script>
<script>
  import {
    sectionTitleLeftAnimation,
    sectionIntersectionObserver,
  } from "@functions/animations";

  document.addEventListener("DOMContentLoaded", () => {
    const titleContainer = document.querySelector(
      ".products-section__title-container"
    )!;
    const categoriesSection = document.querySelector(".products-section")!;
    const titleText = titleContainer.querySelector("p")!;
    const titleButton = titleContainer.querySelector(".button")!;

    sectionIntersectionObserver(() => {
      sectionTitleLeftAnimation([titleText, titleButton]);
    }).observe(categoriesSection);
  });
</script>